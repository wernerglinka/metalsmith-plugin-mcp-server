# {{ pluginName }}

[![metalsmith:plugin][metalsmith-badge]][metalsmith-url]
[![npm: version][npm-badge]][npm-url]
[![license: MIT][license-badge]][license-url]
[![test coverage][coverage-badge]][coverage-url]
[![ESM/CommonJS][modules-badge]][npm-url]
[![Known Vulnerabilities](https://snyk.io/test/npm/{{ pluginName }}/badge.svg)](https://snyk.io/test/npm/{{ pluginName }})

> {{ description }}

## Features

Add features here...

## Installation

```bash
npm install {{ pluginName }}
```

## Requirements

Add requirements here...

## Usage

```js
import Metalsmith from 'metalsmith';
import {{ functionName }} from '{{ pluginName }}';

Metalsmith(__dirname)
  .use({{ functionName }}({
    // options
  }))
  .build((err) => {
    if (err) throw err;
  });
```

## Options

| Option | Type | Default | Description |
|--------|------|---------|-------------|
| `pattern` | `string \| string[]` | `'**/*'` | Pattern to match files. Uses Metalsmith's native pattern matching. |
| `ignore` | `string \| string[]` | `[]` | Patterns to ignore files. |

## How It Works

Add how it works explanation here...

## Examples

Add examples here...

### Basic Usage

```js
import Metalsmith from 'metalsmith';
import {{ functionName }} from '{{ pluginName }}';

Metalsmith(__dirname)
  .source('./src')
  .destination('./build')
  .use({{ functionName }}())
  .build((err) => {
    if (err) throw err;
    console.log('Build complete!');
  });
```

### With Options

```js
import Metalsmith from 'metalsmith';
import {{ functionName }} from '{{ pluginName }}';

Metalsmith(__dirname)
  .source('./src')
  .destination('./build')
  .use({{ functionName }}({
    pattern: ['**/*.html', '**/*.md'],
    ignore: ['drafts/**/*']
  }))
  .build((err) => {
    if (err) throw err;
  });
```

{% if hasAsyncProcessing %}
### Async Processing

This plugin supports asynchronous processing for improved performance:

```js
import Metalsmith from 'metalsmith';
import {{ functionName }} from '{{ pluginName }}';

Metalsmith(__dirname)
  .use({{ functionName }}({
    async: true,
    batchSize: 5
  }))
  .build((err) => {
    if (err) throw err;
  });
```
{% endif %}

## Debug

To enable debug logs, set the DEBUG environment variable:

```bash
DEBUG={{ pluginName }}* node your-script.js
```

Or in your script:

```javascript
process.env.DEBUG = '{{ pluginName }}*';
```

## CLI Usage

Add CLI usage instructions here...

## Testing and Coverage

```bash
# Build the plugin (required before testing)
npm run build

# Run all tests (ESM and CJS)
npm test

# Run only ESM tests
npm run test:esm

# Run only CJS tests
npm run test:cjs

# Generate coverage report
npm run test:coverage

# View HTML coverage report
open coverage/index.html
```

This project maintains 80% code coverage across branches, lines, functions, and statements.

## Contributing

1. Fork the repository
2. Create your feature branch (`git checkout -b feature/amazing-feature`)
3. Commit your changes (`git commit -m 'Add amazing feature'`)
4. Push to the branch (`git push origin feature/amazing-feature`)
5. Open a Pull Request

## License

MIT Â© [Your Name](https://github.com/yourusername)

[metalsmith-badge]: https://img.shields.io/badge/metalsmith-plugin-green.svg?longCache=true
[metalsmith-url]: https://metalsmith.io
[npm-badge]: https://img.shields.io/npm/v/{{ pluginName }}.svg
[npm-url]: https://www.npmjs.com/package/{{ pluginName }}
[license-badge]: https://img.shields.io/github/license/yourusername/{{ pluginName }}
[license-url]: LICENSE
[coverage-badge]: https://img.shields.io/badge/test%20coverage-100.0%25-brightgreen
[coverage-url]: https://github.com/yourusername/{{ pluginName }}/actions/workflows/test.yml
[modules-badge]: https://img.shields.io/badge/modules-ESM%2FCJS-blue